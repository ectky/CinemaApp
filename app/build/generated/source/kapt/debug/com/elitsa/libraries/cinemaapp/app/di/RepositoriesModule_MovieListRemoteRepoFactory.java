// Generated by Dagger (https://dagger.dev).
package com.elitsa.libraries.cinemaapp.app.di;

import com.elitsa.libraries.cinemaapp.app.network.api.MovieListApi;
import com.elitsa.libraries.cinemaapp.ui.movie_list.mvvm.MovieListRepository;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoriesModule_MovieListRemoteRepoFactory implements Factory<MovieListRepository.RemoteRepository> {
  private final RepositoriesModule module;

  private final Provider<MovieListApi> movieListApiProvider;

  public RepositoriesModule_MovieListRemoteRepoFactory(RepositoriesModule module,
      Provider<MovieListApi> movieListApiProvider) {
    this.module = module;
    this.movieListApiProvider = movieListApiProvider;
  }

  @Override
  public MovieListRepository.RemoteRepository get() {
    return movieListRemoteRepo(module, movieListApiProvider.get());
  }

  public static RepositoriesModule_MovieListRemoteRepoFactory create(RepositoriesModule module,
      Provider<MovieListApi> movieListApiProvider) {
    return new RepositoriesModule_MovieListRemoteRepoFactory(module, movieListApiProvider);
  }

  public static MovieListRepository.RemoteRepository movieListRemoteRepo(
      RepositoriesModule instance, MovieListApi movieListApi) {
    return Preconditions.checkNotNull(instance.movieListRemoteRepo(movieListApi), "Cannot return null from a non-@Nullable @Provides method");
  }
}
