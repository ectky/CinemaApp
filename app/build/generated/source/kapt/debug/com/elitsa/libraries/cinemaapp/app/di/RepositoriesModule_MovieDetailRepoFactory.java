// Generated by Dagger (https://dagger.dev).
package com.elitsa.libraries.cinemaapp.app.di;

import com.elitsa.libraries.cinemaapp.ui.movie_detail.mvvm.MovieDetailRepository;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoriesModule_MovieDetailRepoFactory implements Factory<MovieDetailRepository> {
  private final RepositoriesModule module;

  private final Provider<MovieDetailRepository.RemoteRepository> remoteRepositoryProvider;

  private final Provider<MovieDetailRepository.LocalRepository> localRepositoryProvider;

  public RepositoriesModule_MovieDetailRepoFactory(RepositoriesModule module,
      Provider<MovieDetailRepository.RemoteRepository> remoteRepositoryProvider,
      Provider<MovieDetailRepository.LocalRepository> localRepositoryProvider) {
    this.module = module;
    this.remoteRepositoryProvider = remoteRepositoryProvider;
    this.localRepositoryProvider = localRepositoryProvider;
  }

  @Override
  public MovieDetailRepository get() {
    return movieDetailRepo(module, remoteRepositoryProvider.get(), localRepositoryProvider.get());
  }

  public static RepositoriesModule_MovieDetailRepoFactory create(RepositoriesModule module,
      Provider<MovieDetailRepository.RemoteRepository> remoteRepositoryProvider,
      Provider<MovieDetailRepository.LocalRepository> localRepositoryProvider) {
    return new RepositoriesModule_MovieDetailRepoFactory(module, remoteRepositoryProvider, localRepositoryProvider);
  }

  public static MovieDetailRepository movieDetailRepo(RepositoriesModule instance,
      MovieDetailRepository.RemoteRepository remoteRepository,
      MovieDetailRepository.LocalRepository localRepository) {
    return Preconditions.checkNotNull(instance.movieDetailRepo(remoteRepository, localRepository), "Cannot return null from a non-@Nullable @Provides method");
  }
}
