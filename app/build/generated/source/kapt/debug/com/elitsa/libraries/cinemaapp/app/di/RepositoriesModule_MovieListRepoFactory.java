// Generated by Dagger (https://dagger.dev).
package com.elitsa.libraries.cinemaapp.app.di;

import com.elitsa.libraries.cinemaapp.ui.movie_list.mvvm.MovieListRepository;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoriesModule_MovieListRepoFactory implements Factory<MovieListRepository> {
  private final RepositoriesModule module;

  private final Provider<MovieListRepository.RemoteRepository> remoteRepositoryProvider;

  private final Provider<MovieListRepository.LocalRepository> localRepositoryProvider;

  public RepositoriesModule_MovieListRepoFactory(RepositoriesModule module,
      Provider<MovieListRepository.RemoteRepository> remoteRepositoryProvider,
      Provider<MovieListRepository.LocalRepository> localRepositoryProvider) {
    this.module = module;
    this.remoteRepositoryProvider = remoteRepositoryProvider;
    this.localRepositoryProvider = localRepositoryProvider;
  }

  @Override
  public MovieListRepository get() {
    return movieListRepo(module, remoteRepositoryProvider.get(), localRepositoryProvider.get());
  }

  public static RepositoriesModule_MovieListRepoFactory create(RepositoriesModule module,
      Provider<MovieListRepository.RemoteRepository> remoteRepositoryProvider,
      Provider<MovieListRepository.LocalRepository> localRepositoryProvider) {
    return new RepositoriesModule_MovieListRepoFactory(module, remoteRepositoryProvider, localRepositoryProvider);
  }

  public static MovieListRepository movieListRepo(RepositoriesModule instance,
      MovieListRepository.RemoteRepository remoteRepository,
      MovieListRepository.LocalRepository localRepository) {
    return Preconditions.checkNotNull(instance.movieListRepo(remoteRepository, localRepository), "Cannot return null from a non-@Nullable @Provides method");
  }
}
